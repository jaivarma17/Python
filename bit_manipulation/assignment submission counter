import os

# File paths
status_file = 'assignment_status.txt'
counter_file = 'submission_counter.txt'

# Check if the status file exists and create it if not
if not os.path.exists(status_file):
    with open(status_file, 'w') as f:
        f.write('not_submitted')  # Initial status

# Check if the counter file exists and create it if not
if not os.path.exists(counter_file):
    with open(counter_file, 'w') as f:
        f.write('0')  # Initial counter value

# Function to read the status of the assignment
def get_submission_status():
    with open(status_file, 'r') as f:
        status = f.read().strip()
    return status

# Function to update the status of the assignment
def set_submission_status(status):
    with open(status_file, 'w') as f:
        f.write(status)

# Function to read the current counter value
def read_counter():
    with open(counter_file, 'r') as f:
        count = int(f.read().strip())
    return count

# Function to update the counter value
def update_counter(value):
    with open(counter_file, 'w') as f:
        f.write(str(value))

# Main logic
def main():
    status = get_submission_status()
    
    if status == 'not_submitted':
        # Increment the counter
        current_count = read_counter()
        new_count = current_count + 1
        update_counter(new_count)
        print(f"Assignment not submitted. Counter incremented to {new_count}.")
        
        # Optionally, you can update the status to 'submitted' after incrementing
        set_submission_status('submitted')
    else:
        print("Assignment has already been submitted.")

if __name__ == '__main__':
    main()
